version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "8080"
    volumes:
      - ./frontend:/app
      - frontend_build:/app/dist
    networks:
      - web_network
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - frontend_build:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - web_network
    restart: always

  backend:
    environment:
      - CONDA_DEFAULT_ENV=snakemake
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    networks:
      - web_network
      - backend_network
    restart: always

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network
    restart: always

  rabbitmq:
    image: "rabbitmq:management"
    expose:
      - "15672"
      - "5672"
    networks:
      - backend_network
    restart: always

  celery:
    environment:
      - CONDA_DEFAULT_ENV=snakemake
      - C_FORCE_ROOT=true
    ipc: host
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    volumes:
      - ./backend:/app
    depends_on:
      - rabbitmq
      - db
    networks:
      - backend_network
    restart: always

networks:
  web_network:
  backend_network:

volumes:
  frontend_build:
  postgres_data:
