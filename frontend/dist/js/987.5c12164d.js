"use strict";(self["webpackChunkcellcraft_vue"]=self["webpackChunkcellcraft_vue"]||[]).push([[987],{3987:function(e,t,s){s.r(t),s.d(t,{default:function(){return h}});var a=function(){var e=this,t=e._self._c;return t("div",{attrs:{id:"layout"}},[t("div",{staticClass:"plotly-layout"},[t("div",{ref:"plotlyChart",attrs:{id:"plotlyChart"}})]),t("div",{staticClass:"options-layout"},[t("div",{staticClass:"options__item"},[t("p",{staticClass:"options__title"},[e._v("Method")]),t("select",{directives:[{name:"model",rawName:"v-model",value:e.selectedVisualizationTitle,expression:"selectedVisualizationTitle"}],staticClass:"options__item--select",on:{change:[function(t){var s=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){var t="_value"in e?e._value:e.value;return t}));e.selectedVisualizationTitle=t.target.multiple?s:s[0]},function(t){return e.setSelectVisualization(t)}]}},e._l(e.visualizationList,(function(s,a){return t("option",{key:a,domProps:{value:s.name}},[e._v(" "+e._s(s.name)+" ")])})),0)]),e._l(e.selectedVisualizationParams,(function(s,a){return t("div",{directives:[{name:"show",rawName:"v-show",value:"outputFile"!==s.type,expression:"parameter.type !== 'outputFile'"}],key:a,staticClass:"options__item"},["inputFile"===s.type&&s.name.includes("target")?t("p",{staticClass:"options__title"},[e._v(" Input File ")]):t("p",{staticClass:"options__title"},[e._v(" "+e._s(s.name)+" ")]),"inputFile"===s.type&&s.name.includes("target")?t("select",{directives:[{name:"model",rawName:"v-model",value:s.defaultValue,expression:"parameter.defaultValue"}],staticClass:"options__item--select",on:{change:function(t){var a=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){var t="_value"in e?e._value:e.value;return t}));e.$set(s,"defaultValue",t.target.multiple?a:a[0])}}},e._l(e.resultFileConnectionList,(function(s,a){return t("option",{key:a,domProps:{value:s.data.file.name}},[e._v(" "+e._s(s.data.file.name)+" ")])})),0):"inputFile"===s.type?t("div",{staticClass:"checkbox-wrapper-18 options__item--input"},[t("div",{staticClass:"round"},[t("input",{directives:[{name:"model",rawName:"v-model",value:e.checkStatuses[s.defaultValue],expression:"checkStatuses[parameter.defaultValue]"}],attrs:{type:"checkbox",id:"checkbox-18",disabled:""},domProps:{checked:Array.isArray(e.checkStatuses[s.defaultValue])?e._i(e.checkStatuses[s.defaultValue],null)>-1:e.checkStatuses[s.defaultValue]},on:{change:function(t){var a=e.checkStatuses[s.defaultValue],i=t.target,l=!!i.checked;if(Array.isArray(a)){var o=null,n=e._i(a,o);i.checked?n<0&&e.$set(e.checkStatuses,s.defaultValue,a.concat([o])):n>-1&&e.$set(e.checkStatuses,s.defaultValue,a.slice(0,n).concat(a.slice(n+1)))}else e.$set(e.checkStatuses,s.defaultValue,l)}}}),t("label",{attrs:{for:"checkbox-18"}})])]):e._e(),"int"===s.type||"float"===s.type?t("input",{directives:[{name:"model",rawName:"v-model",value:s.defaultValue,expression:"parameter.defaultValue"}],staticClass:"options__item--input",attrs:{type:"number",step:s.defaultValue,min:s.min,max:s.max},domProps:{value:s.defaultValue},on:{input:function(t){t.target.composing||e.$set(s,"defaultValue",t.target.value)}}}):"boolean"===s.type?t("input",{directives:[{name:"model",rawName:"v-model",value:s.defaultValue,expression:"parameter.defaultValue"}],staticClass:"options__item--input",attrs:{type:"checkbox"},domProps:{checked:Array.isArray(s.defaultValue)?e._i(s.defaultValue,null)>-1:s.defaultValue},on:{change:function(t){var a=s.defaultValue,i=t.target,l=!!i.checked;if(Array.isArray(a)){var o=null,n=e._i(a,o);i.checked?n<0&&e.$set(s,"defaultValue",a.concat([o])):n>-1&&e.$set(s,"defaultValue",a.slice(0,n).concat(a.slice(n+1)))}else e.$set(s,"defaultValue",l)}}}):"string"===s.type?t("input",{directives:[{name:"model",rawName:"v-model",value:s.defaultValue,expression:"parameter.defaultValue"}],staticClass:"options__item--input",attrs:{type:"text"},domProps:{value:s.defaultValue},on:{input:function(t){t.target.composing||e.$set(s,"defaultValue",t.target.value)}}}):e._e()])})),t("div",{staticClass:"options__item"},[t("button",{attrs:{id:"reset-button"},on:{click:e.resetSelect}},[e._v("Reset")]),t("button",{class:{failure:e.showFailure,success:e.showSuccess},attrs:{id:"apply-button",disabled:e.disableApplyButton||e.on_progress},on:{click:e.runVisualization}},[e.on_progress?t("p",[t("span",{staticClass:"button-loader"}),e._v(" Processing... ")]):e.showFailure?t("p",[e._v(" Failure... ")]):e.showSuccess?t("p",[e._v(" Visualization ")]):t("p",[e._v(" "+e._s(e.disableApplyButton?"Select Applied":"Select Apply ")+" ")])])])],2)])},i=[],l=s(6098),o=s(8933),n=s.n(o),u={data(){return{workflowId:this.$route.query.workflow_id,nodeId:this.$route.query.node,algorithmId:null,plotlyData:null,layout:{},selectedPlugin:"",selectedVisualizationParams:[],selectedVisualizationTitle:"",visualizationList:[],resultFileConnectionList:[],resultFileList:[],checkStatuses:{},eventSources:{},disableApplyButton:!1,on_progress:!1,taskStatus:"",showFailure:!1,showSuccess:!1}},async mounted(){try{const e=this.$store.getters.getWorkflowNodeInfo(this.nodeId),t=e.inputs.input_1.connections,s=this.$store.getters.getAlgorithmNodeConnectedToInput(this.nodeId);console.log(s),this.algorithmId=s.id,this.resultFileList=await this.checkResultFiles(),this.selectedPlugin=s.data.selectedPlugin.name;const a=await(0,l.Yv)(this.selectedPlugin),i=Object.values(a.data.plugin.rules),o=i.filter((e=>e.isVisualization));this.visualizationList=o,console.log(this.visualizationList),this.resultFileConnectionList=t.map((e=>this.$store.getters.getWorkflowNodeInfo(e.node)));const n=e.data.title,u=o.find((e=>e.output[0]===n));if(e.data["selectedVisualizationParams"]&&e.data["selectedVisualizationTitle"]?(this.selectedVisualizationParams=e.data["selectedVisualizationParams"],this.selectedVisualizationTitle=e.data["selectedVisualizationTitle"]):u?(this.selectedVisualizationParams=u.parameters,this.selectedVisualizationTitle=u.name):(this.selectedVisualizationParams=this.visualizationList[0].parameters,this.selectedVisualizationTitle=this.visualizationList[0].name),this.initializeCheckStatuses(),this.selectedVisualizationParams.length>0){const e={selectedVisualizationParams:this.selectedVisualizationParams},t=this.nodeId;this.$store.commit("setWorkflowNodeDataObject",{nodeId:t,dataObject:e})}if(this.selectedVisualizationTitle){const e={selectedVisualizationTitle:this.selectedVisualizationTitle},t=this.nodeId;this.$store.commit("setWorkflowNodeDataObject",{nodeId:t,dataObject:e})}this.renderPlot()}catch(e){console.error(e)}},watch:{selectedVisualizationParams:{handler(e){if(e){const t={selectedVisualizationParams:e},s=this.nodeId;this.$store.commit("setWorkflowNodeDataObject",{nodeId:s,dataObject:t})}},deep:!0},selectedVisualizationTitle:{handler(e){if(e){const t={selectedVisualizationTitle:e},s=this.nodeId;this.$store.commit("setWorkflowNodeDataObject",{nodeId:s,dataObject:t})}}}},beforeDestroy(){for(let e in this.eventSources)this.closeEventSource(e)},methods:{async runVisualization(){try{const e=this.$store.getters.getTitle,t=this.$store.getters.getThumbnail,s=this.$store.getters.getWorkflowInfo,a={id:this.workflowId,current_node_id:this.nodeId,title:e,thumbnail:t,workflow_info:s},i=await(0,l.kq)(a);if(console.log(i),"Visualization result already exists"===i.data.message){const e={id:this.workflowId,algorithm_id:this.algorithmId,filename:i.data.result_path},t=await(0,l.uQ)(e);this.plotlyData=t.data,this.renderPlot(),this.taskStatus="SUCCESS"}else this.createEventSource(i.data.task_id)}catch(e){console.error(e)}},renderPlot(){this.plotlyData&&n().newPlot(this.$refs.plotlyChart,this.plotlyData.data,this.plotlyData.layout)},async resetSelect(){try{const e=await(0,l.Yv)(this.selectedPlugin),t=Object.values(e.data.plugin.rules),s=t.filter((e=>e.isVisualization));this.visualizationList=s;const a=s.find((e=>e.name===this.selectedVisualizationTitle));this.selectedVisualizationParams=a.parameters,this.plotlyData=null,this.renderPlot()}catch(e){console.error(e)}},createEventSource(e){this.on_progress=!0,this.taskStatus="",this.showFailure=!1,this.eventSources[e]=(0,l.Ng)(e,{onMessage:e=>{console.log("Received update: ",e.data)},onComplete:t=>{console.log("close",t),"FAILURE"===t?(this.taskStatus="FAILURE",this.showFailure=!0,setTimeout((()=>{this.showFailure=!1}),3e3)):"SUCCESS"===t&&(this.taskStatus="SUCCESS",this.showSuccess=!0),this.on_progress=!1,this.closeEventSource(e),clearInterval(this.timeInterval)},onError:t=>{console.error("SSE Error:",t),this.taskStatus="FAILURE",this.showFailure=!0,setTimeout((()=>{this.showFailure=!1}),3e3),this.on_progress=!1,this.closeEventSource(e),clearInterval(this.timeInterval)}})},closeEventSource(e){this.eventSources[e]&&(this.eventSources[e].close(),delete this.eventSources[e])},setSelectVisualization(e){const t=this.visualizationList.find((t=>t.name===e.target.value));this.selectedVisualizationParams=t.parameters,this.initializeCheckStatuses(),this.renderPlot()},setSelectInputFile(e){this.selectedInputFile=e.target.value,this.renderPlot()},initializeCheckStatuses(){Array.isArray(this.selectedVisualizationParams)&&this.selectedVisualizationParams.forEach((e=>{"inputFile"!==e.type||e.name.includes("target")||(console.log(e.defaultValue),this.checkStatuses[e.defaultValue]=this.resultFileList.some((t=>t.name===e.defaultValue)),this.disableApplyButton=!Object.values(this.checkStatuses).every((e=>e)))}))},async checkResultFiles(){const e={id:this.workflowId,algorithm_id:this.algorithmId},t=await(0,l.h1)(e),s=t.data;return console.log(s),s}}},r=u,c=s(1656),d=(0,c.A)(r,a,i,!1,null,"e815d936",null),h=d.exports}}]);
//# sourceMappingURL=987.5c12164d.js.map