{"version":3,"file":"js/920.f3925912.js","mappings":"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","sources":["webpack://cellcraft-vue/./src/components/modals/algorithm.vue","webpack://cellcraft-vue/src/components/modals/algorithm.vue","webpack://cellcraft-vue/./src/components/modals/algorithm.vue?a60c","webpack://cellcraft-vue/./src/components/modals/algorithm.vue?4efa"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"layout\"},on:{\"click\":_vm.uncheckCheckbox}},[_c('div',{staticClass:\"left-layout\"},[_c('div',{staticClass:\"setup-layout\"},[_c('div',{staticClass:\"setup-title\"},[_vm._v(\"Recent Setting\")]),_c('ul',{staticClass:\"setup-list\"},[_vm._m(0),_vm._l((_vm.sortedSetupList),function(file,idx){return _c('li',{key:idx,staticClass:\"setup-item\",on:{\"click\":function($event){return _vm.getOption(file)}}},[_c('div',{staticClass:\"setup-filename\"},[_vm._v(\" \"+_vm._s(_vm._f(\"splitDateAndFileName\")(file,2))+\" \")])])})],2)])]),_c('div',{staticClass:\"center-layout\"},[_c('div',{staticClass:\"algorithm-layout\"},[_c('div',{staticClass:\"algorithm-select\"},[(_vm.current_algorithm == 'fasttenet')?_c('img',{staticClass:\"algorithm-logo\",attrs:{\"src\":_vm.fasttenetLog,\"alt\":\"fasttenet\"}}):(_vm.current_algorithm == 'tenet')?_c('img',{staticClass:\"algorithm-logo\",attrs:{\"src\":_vm.tenetLogo,\"alt\":\"tenet\"}}):_vm._e()]),(_vm.current_algorithm === 'tenet')?_c('div',{staticClass:\"algorithm-select__tenet\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedTenetOption),expression:\"selectedTenetOption\"}],attrs:{\"type\":\"radio\",\"name\":\"select\",\"id\":\"option-1\",\"value\":\"TENET\",\"checked\":\"\"},domProps:{\"checked\":_vm._q(_vm.selectedTenetOption,\"TENET\")},on:{\"change\":function($event){_vm.selectedTenetOption=\"TENET\"}}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedTenetOption),expression:\"selectedTenetOption\"}],attrs:{\"type\":\"radio\",\"name\":\"select\",\"id\":\"option-2\",\"value\":\"TENET_TF\"},domProps:{\"checked\":_vm._q(_vm.selectedTenetOption,\"TENET_TF\")},on:{\"change\":function($event){_vm.selectedTenetOption=\"TENET_TF\"}}}),_vm._m(1),_vm._m(2)]):_vm._e(),_c('div',{staticClass:\"algorithm-parts\"},[_c('div',[_c('div',{staticClass:\"part-title\"},[_vm._v(\"Select Input\")]),_c('div',{staticClass:\"parameters\"},[_vm._m(3),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.option_name),expression:\"option_name\"}],staticClass:\"parameter__textInput\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.option_name)},on:{\"input\":function($event){if($event.target.composing)return;_vm.option_name=$event.target.value}}})]),_c('div',{staticClass:\"parameters\"},[_vm._m(4),(_vm.checkSelectedIndices)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.isSelectedIndices),expression:\"isSelectedIndices\"}],staticClass:\"parameter__dropdown\",class:{\n                wiggle: _vm.checkSelectedIndices && _vm.isFileSelected === false,\n              },on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.isSelectedIndices=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},function($event){_vm.isFileSelected = true}]}},[_c('option',{staticClass:\"parameter__menu\",attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\" Select File \")]),_c('option',{staticClass:\"parameter__menu\",domProps:{\"value\":this.$store.getters.getCurrentFile.file}},[_vm._v(\" \"+_vm._s(this.current_file)+\" \")]),_c('option',{staticClass:\"parameter__menu\",attrs:{\"value\":\"selected\"}},[_vm._v(\" \"+_vm._s(this.current_file)+\" (selected) \")])]):_c('input',{staticClass:\"parameter__textInput\",class:{ 'red-text': !this.current_file },attrs:{\"type\":\"text\",\"placeholder\":this.current_file,\"v-model\":this.current_file,\"disabled\":true}})]),_c('div',{staticClass:\"parameters\"},[_vm._m(5),(_vm.checkFileSelected || !_vm.isFileSelected)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.commonOptions.annotationColumn),expression:\"commonOptions.annotationColumn\"}],staticClass:\"parameter__dropdown\",class:{ wiggle: this.commonOptions.annotationColumn === '' },on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.commonOptions, \"annotationColumn\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){return _vm.selectColumns($event)}]}},[_c('option',{staticClass:\"parameter__menu\",attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\" Select Cell Group \")]),_vm._l((_vm.annotations),function(column,index){return _c('option',{key:index,staticClass:\"parameter__menu\",domProps:{\"value\":column}},[_vm._v(\" \"+_vm._s(column)+\" \")])})],2):_c('input',{staticClass:\"parameter__textInput\",attrs:{\"type\":\"text\",\"placeholder\":this.$store.getters.getCurrentLinkedNodes[0].group,\"disabled\":true}})]),_c('div',{staticClass:\"parameters\"},[_vm._m(6),(_vm.checkFileSelected || !_vm.isFileSelected)?_c('label',{staticClass:\"parameter__dropdown\",class:{\n                wiggle:\n                  this.commonOptions.annotationColumn !== '' &&\n                  this.commonOptions.clusterColumn.length === 0,\n              },attrs:{\"for\":\"touch\"}},[_c('span',[_vm._v(\"Select Clusters\")]),(_vm.commonOptions.clusterColumn.length !== 0)?_c('img',{staticClass:\"parameter__icon\",attrs:{\"src\":require(\"@/assets/check.png\")}}):_c('img',{staticClass:\"parameter__icon\",attrs:{\"src\":require(\"@/assets/checkbox.png\")}})]):_c('input',{staticClass:\"parameter__textInput\",attrs:{\"type\":\"text\",\"placeholder\":\"already selected\",\"disabled\":true}}),_c('input',{ref:\"checkbox\",staticClass:\"parameter__drop\",attrs:{\"type\":\"checkbox\",\"id\":\"touch\",\"disabled\":this.commonOptions.annotationColumn === ''}}),_c('div',{ref:\"checkbox__area\",staticClass:\"parameter__checkbox\"},_vm._l((_vm.clusters),function(column,index){return _c('div',{key:index,staticClass:\"parameter__menu\",on:{\"click\":function($event){return _vm.clusterToggle(column)}}},[_vm._v(\" \"+_vm._s(column)+\" \"),(_vm.commonOptions.clusterColumn.includes(column))?_c('img',{staticClass:\"parameter__icon\",attrs:{\"src\":require(\"@/assets/check.png\"),\"alt\":\"check\"}}):_c('img',{staticClass:\"parameter__icon\",attrs:{\"src\":require(\"@/assets/checkbox.png\"),\"alt\":\"check\"}})])}),0)]),_c('div',{staticClass:\"parameters\"},[_vm._m(7),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.commonOptions.pseudotimeColumn),expression:\"commonOptions.pseudotimeColumn\"}],staticClass:\"parameter__dropdown\",class:{ wiggle: this.commonOptions.pseudotimeColumn === '' },on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.commonOptions, \"pseudotimeColumn\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{staticClass:\"parameter__menu\",attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\" Select Pseudotime \")]),_vm._l((_vm.pseudotime),function(column,index){return _c('option',{key:index,staticClass:\"parameter__menu\",domProps:{\"value\":column}},[_vm._v(\" \"+_vm._s(column)+\" \")])})],2)])]),_vm._l((_vm.currentAlgorithmData),function(part){return _c('div',{key:part.id},[_c('div',{staticClass:\"part-title\"},[_vm._v(_vm._s(part.id))]),_vm._l((part.parameters),function(parameter){return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(\n              parameter.id !== 'species' || _vm.selectedTenetOption === 'TENET_TF'\n            ),expression:\"\\n              parameter.id !== 'species' || selectedTenetOption === 'TENET_TF'\\n            \"}],key:parameter.id},[_c('div',{staticClass:\"parameters\"},[_c('span',{staticClass:\"parameter-id\"},[_vm._v(_vm._s(parameter.id)+\" \"),_c('span',{staticClass:\"parameter-tooltip\"},[_vm._v(_vm._s(parameter.description))])]),(parameter.type === 'number')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(parameter.value),expression:\"parameter.value\"}],staticClass:\"parameter__textInput\",attrs:{\"type\":\"number\",\"step\":parameter.step,\"disabled\":parameter.disabled,\"min\":parameter.min,\"max\":parameter.max},domProps:{\"value\":(parameter.value)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(parameter, \"value\", $event.target.value)}}}):(parameter.type === 'radio')?_c('div',{staticClass:\"parameter__radioBox\"},_vm._l((Object.keys(parameter.value)),function(option,idx){return _c('div',{key:idx,staticClass:\"parameter__radio\",class:{ selected: parameter.value[option] },on:{\"click\":function($event){return _vm.selectOption(option, parameter.value)}}},[_vm._v(\" \"+_vm._s(option)+\" \")])}),0):(parameter.type === 'upload')?_c('label',{staticClass:\"parameter__button\",style:(_vm.buttonStyle)},[(parameter.value === '')?_c('img',{staticClass:\"parameter__button--icon\",attrs:{\"src\":require(\"@/assets/upload-file-black.png\")}}):_c('div',{staticClass:\"parameter__textInput\"},[_vm._v(\" \"+_vm._s(parameter.value)+\" \")]),_c('input',{ref:\"selectFile\",refInFor:true,staticClass:\"form__input\",attrs:{\"type\":\"file\",\"name\":\"file\"},on:{\"change\":function($event){$event.preventDefault();return _vm.uploadFile.apply(null, arguments)}}})]):(parameter.type === 'dropdown')?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(parameter.value),expression:\"parameter.value\"}],staticClass:\"parameter__dropdown\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(parameter, \"value\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{staticClass:\"parameter__menu\",attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\" Select Species \")]),_vm._l((parameter.data),function(data,idx){return _c('option',{key:idx,staticClass:\"parameter__menu\",domProps:{\"value\":data}},[_vm._v(\" \"+_vm._s(data)+\" \")])})],2):_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(parameter.value),expression:\"parameter.value\"}],staticClass:\"parameter__textInput\",class:{ 'red-text': !parameter.value },attrs:{\"type\":\"text\",\"disabled\":parameter.disabled},domProps:{\"value\":(parameter.value)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(parameter, \"value\", $event.target.value)}}})])])})],2)})],2),_c('label',{staticClass:\"form__button--setup\",class:{ apply: _vm.activate }},[_vm._v(\" Set Up \"),_c('input',{staticClass:\"form__input\",attrs:{\"type\":\"submit\",\"value\":\"업로드\"},on:{\"click\":_vm.setOption}})])])]),_c('div',{staticClass:\"right-layout\"},[_c('div',{staticClass:\"output-layout\"},[_c('div',{staticClass:\"output-title\"},[_vm._v(\"output result\")]),_c('div',[_c('label',{staticClass:\"form__button--result\"},[_vm._v(\" Check Result \"),_c('input',{staticClass:\"form__input\",attrs:{\"type\":\"submit\",\"value\":\"업로드\"},on:{\"click\":_vm.refreshGenerated}})])]),_vm._l((_vm.outputDescriptions),function(outputDescription){return _c('div',{key:outputDescription.id,staticClass:\"output-description\",class:{ generated: outputDescription.generated },on:{\"click\":function($event){return _vm.downloadOutput(outputDescription.downloadLinkList)}}},[_c('span',{staticClass:\"description-id\"},[_vm._v(\" \"+_vm._s(outputDescription.id)+\" \"),_c('span',{staticClass:\"description-tooltip\"},[_vm._v(_vm._s(outputDescription.description))])])])})],2)])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('li',{staticClass:\"setup-item\"},[_c('div',{staticClass:\"setup-filename\"},[_vm._v(\"File Name\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('label',{staticClass:\"option option-1\",attrs:{\"for\":\"option-1\"}},[_c('div',{staticClass:\"dot\"}),_c('span',[_vm._v(\"TENET\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('label',{staticClass:\"option option-2\",attrs:{\"for\":\"option-2\"}},[_c('div',{staticClass:\"dot\"}),_c('span',[_vm._v(\"TENET(TF)\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"parameter-id\"},[_vm._v(\"Option Name \"),_c('span',{staticClass:\"parameter-tooltip\"},[_vm._v(\"Saved option name\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"parameter-id\"},[_vm._v(\"File \"),_c('span',{staticClass:\"parameter-tooltip\"},[_vm._v(\"Selected File Name\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"parameter-id\"},[_vm._v(\"Cell Group \"),_c('span',{staticClass:\"parameter-tooltip\"},[_vm._v(\"Selected Cell Group\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"parameter-id\"},[_vm._v(\"Clusters \"),_c('span',{staticClass:\"parameter-tooltip\"},[_vm._v(\"Selected Clusters\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"parameter-id\"},[_vm._v(\" Pseudotime Column \"),_c('span',{staticClass:\"parameter-tooltip\"},[_vm._v(\" Selected Pseudotime Column \")])])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"layout\" @click=\"uncheckCheckbox\">\n    <div class=\"left-layout\">\n      <div class=\"setup-layout\">\n        <div class=\"setup-title\">Recent Setting</div>\n        <ul class=\"setup-list\">\n          <li class=\"setup-item\">\n            <!-- <div class=\"setup-date\">Date</div> -->\n            <div class=\"setup-filename\">File Name</div>\n          </li>\n          <li\n            class=\"setup-item\"\n            v-for=\"(file, idx) in sortedSetupList\"\n            :key=\"idx\"\n            @click=\"getOption(file)\"\n          >\n            <!-- <div class=\"setup-date\">{{ file | splitDateAndFileName(1) }}</div> -->\n            <div class=\"setup-filename\">\n              {{ file | splitDateAndFileName(2) }}\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"center-layout\">\n      <div class=\"algorithm-layout\">\n        <div class=\"algorithm-select\">\n          <!-- arrow left / right -->\n          <!-- <div class=\"arrow__left\" @click=\"algorithmSelect('left')\"></div> -->\n          <img\n            v-if=\"current_algorithm == 'fasttenet'\"\n            class=\"algorithm-logo\"\n            :src=\"fasttenetLog\"\n            alt=\"fasttenet\"\n          />\n          <img\n            v-else-if=\"current_algorithm == 'tenet'\"\n            class=\"algorithm-logo\"\n            :src=\"tenetLogo\"\n            alt=\"tenet\"\n          />\n          <!-- <div class=\"arrow__right\" @click=\"algorithmSelect('right')\"></div> -->\n        </div>\n        <div\n          class=\"algorithm-select__tenet\"\n          v-if=\"current_algorithm === 'tenet'\"\n        >\n          <input\n            type=\"radio\"\n            name=\"select\"\n            id=\"option-1\"\n            value=\"TENET\"\n            v-model=\"selectedTenetOption\"\n            checked\n          />\n          <input\n            type=\"radio\"\n            name=\"select\"\n            id=\"option-2\"\n            value=\"TENET_TF\"\n            v-model=\"selectedTenetOption\"\n          />\n          <label for=\"option-1\" class=\"option option-1\">\n            <div class=\"dot\"></div>\n            <span>TENET</span>\n          </label>\n          <label for=\"option-2\" class=\"option option-2\">\n            <div class=\"dot\"></div>\n            <span>TENET(TF)</span>\n          </label>\n        </div>\n        <div class=\"algorithm-parts\">\n          <div>\n            <div class=\"part-title\">Select Input</div>\n            <div class=\"parameters\">\n              <span class=\"parameter-id\"\n                >Option Name\n                <span class=\"parameter-tooltip\">Saved option name</span>\n              </span>\n              <input\n                type=\"text\"\n                class=\"parameter__textInput\"\n                v-model=\"option_name\"\n              />\n            </div>\n            <div class=\"parameters\">\n              <span class=\"parameter-id\"\n                >File\n                <span class=\"parameter-tooltip\">Selected File Name</span>\n              </span>\n              <select\n                class=\"parameter__dropdown\"\n                :class=\"{\n                  wiggle: checkSelectedIndices && isFileSelected === false,\n                }\"\n                v-if=\"checkSelectedIndices\"\n                v-model=\"isSelectedIndices\"\n                @change=\"isFileSelected = true\"\n              >\n                <option class=\"parameter__menu\" disabled value=\"\">\n                  Select File\n                </option>\n                <option\n                  class=\"parameter__menu\"\n                  :value=\"this.$store.getters.getCurrentFile.file\"\n                >\n                  {{ this.current_file }}\n                </option>\n                <option class=\"parameter__menu\" value=\"selected\">\n                  {{ this.current_file }} (selected)\n                </option>\n              </select>\n              <input\n                v-else\n                type=\"text\"\n                :placeholder=\"this.current_file\"\n                class=\"parameter__textInput\"\n                :v-model=\"this.current_file\"\n                :class=\"{ 'red-text': !this.current_file }\"\n                :disabled=\"true\"\n              />\n            </div>\n            <div class=\"parameters\">\n              <span class=\"parameter-id\"\n                >Cell Group\n                <span class=\"parameter-tooltip\">Selected Cell Group</span>\n              </span>\n              <select\n                v-if=\"checkFileSelected || !isFileSelected\"\n                class=\"parameter__dropdown\"\n                :class=\"{ wiggle: this.commonOptions.annotationColumn === '' }\"\n                v-model=\"commonOptions.annotationColumn\"\n                @change=\"selectColumns($event)\"\n              >\n                <option class=\"parameter__menu\" disabled value=\"\">\n                  Select Cell Group\n                </option>\n                <option\n                  v-for=\"(column, index) in annotations\"\n                  :key=\"index\"\n                  :value=\"column\"\n                  class=\"parameter__menu\"\n                >\n                  {{ column }}\n                </option>\n              </select>\n              <input\n                v-else\n                type=\"text\"\n                :placeholder=\"\n                  this.$store.getters.getCurrentLinkedNodes[0].group\n                \"\n                class=\"parameter__textInput\"\n                :disabled=\"true\"\n              />\n            </div>\n            <div class=\"parameters\">\n              <span class=\"parameter-id\"\n                >Clusters\n                <span class=\"parameter-tooltip\">Selected Clusters</span>\n              </span>\n              <label\n                v-if=\"checkFileSelected || !isFileSelected\"\n                class=\"parameter__dropdown\"\n                for=\"touch\"\n                :class=\"{\n                  wiggle:\n                    this.commonOptions.annotationColumn !== '' &&\n                    this.commonOptions.clusterColumn.length === 0,\n                }\"\n              >\n                <span>Select Clusters</span>\n                <img\n                  v-if=\"commonOptions.clusterColumn.length !== 0\"\n                  class=\"parameter__icon\"\n                  src=\"@/assets/check.png\"\n                />\n                <img\n                  v-else\n                  class=\"parameter__icon\"\n                  src=\"@/assets/checkbox.png\"\n                />\n              </label>\n              <input\n                v-else\n                type=\"text\"\n                placeholder=\"already selected\"\n                class=\"parameter__textInput\"\n                :disabled=\"true\"\n              />\n              <input\n                ref=\"checkbox\"\n                class=\"parameter__drop\"\n                type=\"checkbox\"\n                id=\"touch\"\n                :disabled=\"this.commonOptions.annotationColumn === ''\"\n              />\n              <div ref=\"checkbox__area\" class=\"parameter__checkbox\">\n                <div\n                  class=\"parameter__menu\"\n                  v-for=\"(column, index) in clusters\"\n                  :key=\"index\"\n                  @click=\"clusterToggle(column)\"\n                >\n                  {{ column }}\n                  <img\n                    v-if=\"commonOptions.clusterColumn.includes(column)\"\n                    class=\"parameter__icon\"\n                    src=\"@/assets/check.png\"\n                    alt=\"check\"\n                  />\n                  <img\n                    v-else\n                    class=\"parameter__icon\"\n                    src=\"@/assets/checkbox.png\"\n                    alt=\"check\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"parameters\">\n              <span class=\"parameter-id\">\n                Pseudotime Column\n                <span class=\"parameter-tooltip\">\n                  Selected Pseudotime Column\n                </span>\n              </span>\n              <select\n                class=\"parameter__dropdown\"\n                :class=\"{ wiggle: this.commonOptions.pseudotimeColumn === '' }\"\n                v-model=\"commonOptions.pseudotimeColumn\"\n              >\n                <option class=\"parameter__menu\" disabled value=\"\">\n                  Select Pseudotime\n                </option>\n                <option\n                  class=\"parameter__menu\"\n                  v-for=\"(column, index) in pseudotime\"\n                  :key=\"index\"\n                  :value=\"column\"\n                >\n                  {{ column }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div v-for=\"part in currentAlgorithmData\" :key=\"part.id\">\n            <div class=\"part-title\">{{ part.id }}</div>\n            <div\n              v-for=\"parameter in part.parameters\"\n              :key=\"parameter.id\"\n              v-show=\"\n                parameter.id !== 'species' || selectedTenetOption === 'TENET_TF'\n              \"\n            >\n              <div class=\"parameters\">\n                <span class=\"parameter-id\"\n                  >{{ parameter.id }}\n                  <span class=\"parameter-tooltip\">{{\n                    parameter.description\n                  }}</span>\n                </span>\n                <input\n                  type=\"number\"\n                  v-if=\"parameter.type === 'number'\"\n                  class=\"parameter__textInput\"\n                  v-model=\"parameter.value\"\n                  :step=\"parameter.step\"\n                  :disabled=\"parameter.disabled\"\n                  :min=\"parameter.min\"\n                  :max=\"parameter.max\"\n                />\n                <div\n                  v-else-if=\"parameter.type === 'radio'\"\n                  class=\"parameter__radioBox\"\n                >\n                  <div\n                    v-for=\"(option, idx) in Object.keys(parameter.value)\"\n                    :class=\"{ selected: parameter.value[option] }\"\n                    class=\"parameter__radio\"\n                    :key=\"idx\"\n                    @click=\"selectOption(option, parameter.value)\"\n                  >\n                    {{ option }}\n                  </div>\n                </div>\n                <label\n                  v-else-if=\"parameter.type === 'upload'\"\n                  class=\"parameter__button\"\n                  :style=\"buttonStyle\"\n                >\n                  <img\n                    v-if=\"parameter.value === ''\"\n                    class=\"parameter__button--icon\"\n                    src=\"@/assets/upload-file-black.png\"\n                  />\n                  <div class=\"parameter__textInput\" v-else>\n                    {{ parameter.value }}\n                  </div>\n                  <input\n                    class=\"form__input\"\n                    type=\"file\"\n                    name=\"file\"\n                    ref=\"selectFile\"\n                    @change.prevent=\"uploadFile\"\n                  />\n                </label>\n                <select\n                  class=\"parameter__dropdown\"\n                  v-else-if=\"parameter.type === 'dropdown'\"\n                  v-model=\"parameter.value\"\n                >\n                  <option class=\"parameter__menu\" disabled value=\"\">\n                    Select Species\n                  </option>\n                  <option\n                    class=\"parameter__menu\"\n                    v-for=\"(data, idx) in parameter.data\"\n                    :key=\"idx\"\n                    :value=\"data\"\n                  >\n                    {{ data }}\n                  </option>\n                </select>\n                <input\n                  type=\"text\"\n                  v-else\n                  class=\"parameter__textInput\"\n                  v-model=\"parameter.value\"\n                  :class=\"{ 'red-text': !parameter.value }\"\n                  :disabled=\"parameter.disabled\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <label class=\"form__button--setup\" v-bind:class=\"{ apply: activate }\">\n          Set Up\n          <input\n            @click=\"setOption\"\n            class=\"form__input\"\n            type=\"submit\"\n            value=\"업로드\"\n          />\n        </label>\n      </div>\n      <!-- run button -->\n      <!-- <div>\n        <div class=\"options__item\">\n          <label class=\"form__button--setup\" v-bind:class=\"{ apply: activate }\">\n            Set up\n            <input\n              @click=\"setOption\"\n              class=\"form__input\"\n              type=\"submit\"\n              value=\"업로드\"\n            />\n          </label>\n        </div>\n      </div> -->\n    </div>\n    <div class=\"right-layout\">\n      <div class=\"output-layout\">\n        <div class=\"output-title\">output result</div>\n        <div>\n          <label class=\"form__button--result\">\n            Check Result\n            <input\n              @click=\"refreshGenerated\"\n              class=\"form__input\"\n              type=\"submit\"\n              value=\"업로드\"\n            />\n          </label>\n        </div>\n        <div\n          v-for=\"outputDescription in outputDescriptions\"\n          :key=\"outputDescription.id\"\n          class=\"output-description\"\n          :class=\"{ generated: outputDescription.generated }\"\n          @click=\"downloadOutput(outputDescription.downloadLinkList)\"\n        >\n          <span class=\"description-id\">\n            {{ outputDescription.id }}\n            <span class=\"description-tooltip\">{{\n              outputDescription.description\n            }}</span>\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  getColumns,\n  getClusters,\n  setupAlgorithm,\n  getOptions,\n  checkOptions,\n  uploadForm,\n  getResultFile,\n  getDownloadResult,\n} from \"@/api/index\";\n\nexport default {\n  data() {\n    return {\n      current_algorithm: \"tenet\",\n      fasttenetLogo: require(\"@/assets/fasttenet.png\"),\n      tenetLogo: require(\"@/assets/tenet.png\"),\n      algorithms: [\"fasttenet\", \"tenet\"],\n      isAnimated: false,\n      isFileSelected: false,\n      isSelectedIndices: \"\",\n      inputDescriptions: [\n        {\n          id: \"Expression Data\",\n          description:\n            \"This is the path to the expression data file. It contains gene expression values for different samples or cells.\",\n          linked: false,\n        },\n        {\n          id: \"Trajectory Data\",\n          description:\n            \"This is the path to the trajectory data file. It represents the progression or trajectory of cells or samples in a biological process.\",\n          linked: false,\n        },\n        {\n          id: \"Branch Data\",\n          description:\n            \"This is the path to the branch or cell select data file. It specifies the branches or groups of cells in the trajectory.\",\n          linked: false,\n        },\n      ],\n      //     id: \"fasttenet parameters\",\n      //     parameters: [\n      //       {\n      //         id: \"make_binary\",\n      //         type: \"boolean\",\n      //         description: \"if True, make binary expression and node name file\",\n      //         value: \"False\",\n      //         required: false,\n      //         disabled: false,\n      //       },\n      //     ],\n      //   },\n      //   {\n      //     id: \"worker run parameters\",\n      //     parameters: [\n      //       {\n      //         id: \"Device\",\n      //         type: \"string\",\n      //         description: \"cpu or gpu\",\n      //         value: \"gpu\",\n      //         required: false,\n      //         disabled: false,\n      //       },\n      //       {\n      //         id: \"Device Ids\",\n      //         type: \"list\",\n      //         description: \"[0](cpu) or [list of whole gpu devices](gpu)\",\n      //         value: [0, 1, 2, 3, 4, 5, 6, 7],\n      //         required: false,\n      //         disabled: false,\n      //       },\n      //       {\n      //         id: \"Batch Size\",\n      //         type: \"number\",\n      //         description: \"batch size\",\n      //         value: 2 ** 16,\n      //         required: true,\n      //         disabled: false,\n      //       },\n      //       {\n      //         id: \"Kp\",\n      //         type: \"number\",\n      //         description: \"kernel percentail\",\n      //         value: 0.5,\n      //         required: false,\n      //         disabled: false,\n      //       },\n      //       {\n      //         id: \"Percentile\",\n      //         type: \"number\",\n      //         description: \"data crop percentile\",\n      //         value: 0,\n      //         required: false,\n      //         disabled: false,\n      //       },\n      //       {\n      //         id: \"Win length\",\n      //         type: \"number\",\n      //         description: \"smoothe func window length parameter\",\n      //         value: 10,\n      //         required: false,\n      //         disabled: false,\n      //       },\n      //       {\n      //         id: \"Polyorder\",\n      //         type: \"number\",\n      //         description: \"smoothe func polyorder parameter\",\n      //         value: 3,\n      //         required: false,\n      //         disabled: false,\n      //       },\n      //     ],\n      //   },\n      // ],\n      tenetAlgorithm: [\n        {\n          id: \"tenet parameters\",\n          parameters: [\n            {\n              id: \"number of threads\",\n              type: \"number\",\n              step: 1,\n              description: \"number of threads\",\n              value: 10,\n              max: 10,\n              min: 1,\n              required: true,\n              disabled: false,\n            },\n            {\n              id: \"history length\",\n              type: \"number\",\n              step: 1,\n              description: \"history length\",\n              value: 1,\n              max: 1,\n              min: 1,\n              required: true,\n              disabled: false,\n            },\n            {\n              id: \"species\",\n              type: \"dropdown\",\n              data: [\"human\", \"mouse\", \"rat\"],\n              description: \"human or mouse or rat\",\n              value: \"\",\n              required: true,\n              disabled: true,\n            },\n            {\n              id: \"gene list\",\n              type: \"upload\",\n              description: \"gene list\",\n              value: \"\",\n              required: false,\n              disabled: false,\n            },\n          ],\n        },\n        {\n          id: \"filter parameters\",\n          parameters: [\n            {\n              id: \"cutoff for FDR\",\n              type: \"number\",\n              step: 0.01,\n              description: \"A cutoff value for FDR by z-test\",\n              value: 0.01,\n              min: 0,\n              required: true,\n              disabled: false,\n            },\n            {\n              id: \"number of links\",\n              type: \"number\",\n              step: 100,\n              description: \"The number of links of the GRN\",\n              value: 1000,\n              min: 0,\n              required: true,\n              disabled: false,\n            },\n            {\n              id: \"Trimming Indirect Edges\",\n              type: \"number\",\n              step: 0.01,\n              description: \"The cutoff of trimming indirect edges\",\n              value: 0.01,\n              min: 0,\n              required: true,\n              disabled: false,\n            },\n          ],\n        },\n      ],\n      outputDescriptions: [\n        {\n          id: \"Z-test filtered GRN\",\n          description: \"Reconstructing GRN Output File\",\n          generated: false,\n          requestFile: \"fdr\",\n          downloadLinkList: [],\n        },\n        {\n          id: \"filtered GRN by TE score\",\n          description: \"Reconstructing GRN Output File\",\n          generated: false,\n          requestFile: \"NumberOfLinks\",\n          downloadLinkList: [],\n        },\n        {\n          id: \"Indirect edges Trimmed GRN\",\n          description: \"Trimming indirect edges Output File\",\n          generated: false,\n          requestFile: \"trimIndirect\",\n          downloadLinkList: [],\n        },\n        {\n          id: \"GRN Outdegree table\",\n          description: \"Counting out-degree of a given GRN Output File\",\n          generated: false,\n          requestFile: \"outdegree\",\n          downloadLinkList: [],\n        },\n      ],\n      annotations: [],\n      pseudotime: [],\n      clusters: [],\n      current_option_file_name: \"\",\n      option_name: \"Untitled\",\n      current_file: null,\n      commonOptions: {\n        annotationColumn: \"\",\n        pseudotimeColumn: \"\",\n        clusterColumn: [],\n      },\n      activate: false,\n      optionData: {},\n      selectedTenetOption: \"TENET\",\n      setupList: [],\n      uploadPercentage: 0,\n      uploadFailed: false,\n      selectFile: null,\n    };\n  },\n  async mounted() {\n    // Vuex에서 algorithmOptions 가져오기\n    const nodeIndex = this.$store.getters.getCurrentNodeIndex;\n    console.log(\"현재 nodeIndex : \" + nodeIndex + typeof nodeIndex);\n    const algorithmOptions =\n      this.$store.getters.getNodesAlgorithmOptions(nodeIndex);\n    console.log(\"store algorithm option : \" + algorithmOptions);\n    if (\n      algorithmOptions.algorithm !== null ||\n      algorithmOptions.algorithm !== undefined\n    )\n      this.selectedTenetOption = algorithmOptions.algorithm;\n    if (algorithmOptions.optionName !== \"Untitled\")\n      this.option_name = algorithmOptions.optionName;\n    if (algorithmOptions.optionFilePath !== null)\n      this.current_option_file_name = algorithmOptions.optionFilePath;\n    if (\n      algorithmOptions.commonOptions !== null ||\n      algorithmOptions.commonOptions !== undefined\n    )\n      this.commonOptions = algorithmOptions.commonOptions;\n    if (algorithmOptions.tenetOptions !== null)\n      this.tenetAlgorithm = algorithmOptions.tenetOptions;\n\n    if (this.commonOptions.annotationColumn !== \"\") {\n      try {\n        const result = await getClusters({\n          file_name: this.current_file,\n          anno_column: this.commonOptions.annotationColumn,\n        });\n        console.log(result.data);\n        this.clusters = result.data.clusters;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    this.current_file = this.filterAndAddSuffix(\n      this.$store.getters.getCurrentFile.file\n    );\n    console.log(\"store file name is\" + this.$store.getters.getCurrentFile.file);\n    console.log(\"current file name is\" + this.current_file);\n    if (this.current_file !== \"\") {\n      try {\n        console.log(this.$store.getters.getCurrentFile.file);\n        const result = await getColumns({\n          file_name: this.current_file,\n        });\n        console.log(result.data);\n        this.annotations = result.data.anno_columns;\n        this.pseudotime = result.data.pseudo_columns;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    try {\n      const result = await checkOptions();\n      console.log(result.data);\n      // this.current_file이 setupList 안에 있는 모든 아이템에 포함되도록 필터링\n      this.setupList = result.data.option_files.filter((item) => {\n        return item.includes(this.current_file);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n    await this.refreshGenerated();\n  },\n  computed: {\n    checkCurrentNode() {\n      return this.$store.getters.getCurrentNode;\n    },\n    checkSelectedIndices() {\n      return Object.keys(this.$store.getters.getCurrentLinkedNodes[0]).includes(\n        \"selectedIndices\"\n      );\n    },\n    checkFileSelected() {\n      return this.isSelectedIndices === this.$store.getters.getCurrentFile.file;\n    },\n    currentAlgorithmData() {\n      switch (this.current_algorithm) {\n        case \"fasttenet\":\n          return this.fasttenetAlgorithm;\n        case \"tenet\":\n          return this.tenetAlgorithm;\n        default:\n          return [];\n      }\n    },\n    sortedSetupList() {\n      return this.setupList.slice().sort((a, b) => {\n        return b.localeCompare(a);\n      });\n    },\n    buttonStyle() {\n      // 업로드 실패 시 배경색을 빨간색으로 설정\n      if (this.uploadFailed) {\n        return {\n          backgroundColor: \"red\",\n        };\n      }\n      // 정상적인 업로드 진행률에 따라 배경색 설정\n      return {\n        backgroundColor: `rgba(76, 175, 80, ${this.uploadPercentage / 100})`,\n      };\n    },\n  },\n  watch: {\n    selectedTenetOption: {\n      handler(newVal) {\n        this.$store.commit(\"setLinkedNodeAlgorithm\", {\n          nodeIndex: this.$store.getters.getCurrentNodeIndex,\n          algorithm: newVal,\n        });\n      },\n      deep: true,\n    },\n    commonOptions: {\n      async handler(newVal, oldVal) {\n        this.$store.commit(\"setLinkedNodeCommonOptions\", {\n          nodeIndex: this.$store.getters.getCurrentNodeIndex,\n          commonOptions: newVal,\n        });\n\n        // commonOptions.annotationColumn 값이 변경되었는지 확인\n        if (newVal.annotationColumn !== oldVal.annotationColumn) {\n          // clusters 업데이트 함수 호출\n          try {\n            const result = await getClusters({\n              file_name: this.current_file,\n              anno_column: newVal.annotationColumn,\n            });\n            console.log(result.data);\n            this.clusters = result.data.clusters;\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      },\n      deep: true,\n    },\n    fasttenetAlgorithm: {\n      handler(newVal) {\n        this.$store.commit(\"setFasttenetOptions\", newVal);\n      },\n      deep: true,\n    },\n    tenetAlgorithm: {\n      handler(newVal) {\n        this.$store.commit(\"setLinkedNodeTenetOptions\", {\n          nodeIndex: this.$store.getters.getCurrentNodeIndex,\n          tenetOptions: newVal,\n        });\n      },\n      deep: true,\n    },\n  },\n  filters: {\n    // 인자를 하나 더 받아서 1일 경우에 앞 문자열을 return, 2일 경우에 뒤 문자열을 return하도록 수정해줘\n    // template에서 사용할 때는 {{ value | splitDateAndFileName(1) }} 이런 식으로 사용하면 됨\n    splitDateAndFileName(value, num) {\n      if (num === 1) {\n        // 각 부분(년, 월, 일, 시, 분)을 추출합니다.\n        const year = value.split(\"_\")[0].substring(0, 4);\n        const month = value.split(\"_\")[0].substring(4, 6);\n        const day = value.split(\"_\")[0].substring(6, 8);\n        const hour = value.split(\"_\")[0].substring(8, 10);\n        const minute = value.split(\"_\")[0].substring(10, 12);\n        // 추출한 부분을 '년/월/일 시:분' 형식으로 조합합니다.\n        return `${year}/${month}/${day} ${hour}:${minute}`;\n      } else if (num === 2) {\n        return value.split(\"_\")[1];\n      }\n    },\n  },\n  methods: {\n    filterAndAddSuffix(inputString) {\n      // Check if the inputString contains an underscore\n      if (inputString.includes(\"_\")) {\n        // \"_\"로 구분된 문자열을 배열로 변환\n        const segments = inputString.split(\"_\");\n        // 마지막 두 요소를 제외한 나머지를 합침\n        const fileName = segments.slice(0, -2).join(\"_\") + \".h5ad\";\n        return fileName;\n      }\n      // If no underscore found, return the original string\n      return inputString;\n    },\n    algorithmSelect(direction) {\n      let index = this.algorithms.indexOf(this.current_algorithm);\n      if (direction === \"left\") {\n        if (index === 0) {\n          index = this.algorithms.length - 1;\n        } else {\n          index -= 1;\n        }\n      } else if (direction === \"right\") {\n        if (index === this.algorithms.length - 1) {\n          index = 0;\n        } else {\n          index += 1;\n        }\n      }\n      this.current_algorithm = this.algorithms[index];\n      console.log(this.current_algorithm);\n    },\n    async uploadFile() {\n      if (this.$refs.selectFile[0].files.length > 0) {\n        this.selectFile = new File(\n          [this.$refs.selectFile[0].files[0]],\n          this.$refs.selectFile[0].files[0].name\n        );\n        this.tenetAlgorithm[0].parameters[3].value =\n          this.$refs.selectFile[0].files[0].name;\n        const form = new FormData();\n        form.append(\"files\", this.selectFile);\n        // 파일 업로드 진행률을 추적하기 위한 콜백\n        const onUploadProgress = (progressEvent) => {\n          this.uploadPercentage = parseInt(\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\n          );\n        };\n        try {\n          const response = await uploadForm(form, onUploadProgress);\n          console.log(response);\n          this.uploadFailed = false; // 업로드 성공\n        } catch (error) {\n          console.error(error);\n          this.uploadFailed = true; // 업로드 실패\n        }\n      }\n    },\n    async getOption(filename) {\n      if (\n        confirm(\n          \"Are you sure you want to import the selected options? Please make sure you have saved the currently selected options.\"\n        )\n      ) {\n        console.log(filename);\n        try {\n          const result = await getOptions(filename);\n          console.log(result.data);\n\n          this.option_name = filename.split(\"_\")[1];\n          this.current_option_file_name = filename;\n          this.$store.commit(\"setLinkedNodeOptionFilePath\", {\n            nodeIndex: this.$store.getters.getCurrentNodeIndex,\n            optionFilePath: this.current_option_file_name,\n          });\n\n          this.selectedTenetOption = result.data.algorithm;\n\n          // commonOptions 설정\n          this.commonOptions = {\n            annotationColumn: result.data.anno_of_interest,\n            pseudotimeColumn: result.data.pseudo_of_interest,\n            clusterColumn: result.data.clusters_of_interest,\n          };\n\n          this.tenetAlgorithm = this.tenetAlgorithm.map((group) => {\n            return {\n              ...group,\n              parameters: group.parameters.map((param) => {\n                switch (param.id) {\n                  case \"number of threads\":\n                    return { ...param, value: result.data.num_of_threads };\n                  case \"history length\":\n                    return { ...param, value: result.data.history_length };\n                  case \"species\":\n                    return { ...param, value: result.data.species };\n                  case \"gene list\":\n                    return { ...param, value: result.data.gene_list_file };\n                  case \"cutoff for FDR\":\n                    return { ...param, value: result.data.cutoff_for_fdr };\n                  case \"number of links\":\n                    return { ...param, value: result.data.num_of_links };\n                  case \"Trimming Indirect Edges\":\n                    return {\n                      ...param,\n                      value: result.data.trimming_indirect_edges,\n                    };\n                  default:\n                    return param;\n                }\n              }),\n            };\n          });\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    },\n\n    uncheckCheckbox(event) {\n      // 체크박스 자체가 클릭된 경우에는 아무 것도 하지 않습니다.\n      if (\n        this.$refs.checkbox.contains(event.target) ||\n        this.$refs.checkbox__area.contains(event.target)\n      ) {\n        return;\n      }\n      // 체크박스 외의 영역이 클릭되면 체크박스의 상태를 해제합니다.\n      this.$refs.checkbox__area.checked = false;\n    },\n    clusterToggle(column) {\n      if (this.commonOptions.clusterColumn.includes(column)) {\n        this.commonOptions.clusterColumn =\n          this.commonOptions.clusterColumn.filter((item) => {\n            return item !== column;\n          });\n      } else {\n        this.commonOptions.clusterColumn.push(column);\n      }\n      console.log(this.commonOptions.clusterColumn);\n    },\n    selectOption(selectedKey, values) {\n      console.log(selectedKey, values);\n      Object.keys(values).forEach((key) => {\n        values[key] = key === selectedKey;\n      });\n    },\n    async selectColumns(event) {\n      console.log(event.target.value);\n      if (this.commonOptions.annotationColumn !== \"\") {\n        try {\n          const result = await getClusters({\n            file_name: this.current_file,\n            anno_column: this.commonOptions.annotationColumn,\n          });\n          console.log(result.data);\n          this.clusters = result.data.clusters;\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    },\n    async setOption() {\n      console.log(this.commonOptions.pseudotimeColumn, this.isSelectedIndices);\n\n      // 옵션들을 전부 선택했는지 확인 후, 다 선택되지 않았다면 alert\n      if (\n        this.commonOptions.pseudotimeColumn === \"\" ||\n        (this.isSelectedIndices !== \"selected\" &&\n          (this.commonOptions.annotationColumn === \"\" ||\n            this.commonOptions.clusterColumn.length === 0))\n      ) {\n        alert(\"Please select all the options.\");\n        return;\n      }\n\n      // 선택한 옵션들을 저장하시겠습니까? 영어로 confirm\n      if (\n        !confirm(\n          \"Are you sure you want to save the selected options? Please make sure you have selected all the options.\"\n        )\n      ) {\n        return;\n      }\n\n      this.optionData = {\n        algorithm: this.selectedTenetOption,\n        option_name: this.option_name,\n        file_name: this.current_file,\n        anno_of_interest: this.commonOptions.annotationColumn,\n        pseudo_of_interest: this.commonOptions.pseudotimeColumn,\n        clusters_of_interest: this.commonOptions.clusterColumn,\n        num_of_threads: this.tenetAlgorithm[0].parameters[0].value,\n        history_length: this.tenetAlgorithm[0].parameters[1].value,\n        species: this.tenetAlgorithm[0].parameters[2].value,\n        gene_list: this.tenetAlgorithm[0].parameters[3].value,\n        cutoff_for_fdr: this.tenetAlgorithm[1].parameters[0].value,\n        num_of_links: this.tenetAlgorithm[1].parameters[1].value,\n        trimming_indirect_edges: this.tenetAlgorithm[1].parameters[2].value,\n      };\n      // 현재 링크된 노드 안에 selectedIndices가 있는지 확인 후, 있으면 optionData에 추가\n      const linkedNodes = this.$store.getters.getCurrentLinkedNodes;\n      if (\n        Object.keys(linkedNodes[0]).includes(\"selectedIndices\") &&\n        this.isSelectedIndices !== this.$store.getters.getCurrentFile.file\n      ) {\n        console.log(typeof linkedNodes[0].selectedIndices[0]);\n        this.optionData[\"selected_indices\"] = linkedNodes[0].selectedIndices;\n        this.optionData[\"anno_of_interest\"] = linkedNodes[0].group;\n        this.optionData[\"clusters_of_interest\"] = [];\n      }\n      try {\n        const result = await setupAlgorithm(this.optionData);\n        console.log(result.data);\n        this.$store.commit(\"setLinkedNodeOptionFilePath\", {\n          nodeIndex: this.$store.getters.getCurrentNodeIndex,\n          optionFilePath: result.data.file_name,\n        });\n        this.activate = true;\n        try {\n          const option_result = await checkOptions();\n          console.log(option_result.data);\n          // this.current_file이 setupList 안에 있는 모든 아이템에 포함되도록 필터링\n          this.setupList = option_result.data.option_files.filter((item) => {\n            return item.includes(this.current_file);\n          });\n        } catch (error) {\n          console.error(error);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async refreshGenerated() {\n      // outputDescriptions를 순회하며 generated를 false로 설정 및 downloadLinkList 초기화\n      this.outputDescriptions.forEach((desc) => {\n        desc.generated = false;\n        desc.downloadLinkList = [];\n      });\n\n      try {\n        const option_file_name = this.$store.getters.getCurrentFile;\n        const result = await getResultFile({\n          file_name: this.current_file,\n          option_file_name: option_file_name.algorithmOptions.optionFilePath,\n        });\n        const resultsList = result.data.result_files;\n\n        if (resultsList.length === 0) {\n          this.outputDescriptions.forEach((desc) => (desc.generated = false));\n          // Recent Setting에서 실행한 알고리즘 세팅을 다시 선택해주세요. 혹은 분석을 실행한 알고리즘이 실행 중인지 Task Manager에서 확인해주세요. 영어로 경고\n          alert(\n            \"Please select the algorithm setting you ran in Recent Setting again. Or check if the algorithm you ran in the analysis is running in Task Monitoring.\"\n          );\n          // alert(\"There is no generated output yet.\");\n          return;\n        }\n\n        // 이미 추가된 파일을 추적하기 위한 집합\n        let addedFiles = new Set();\n\n        // outputDescriptions를 역순으로 순회\n        for (let i = this.outputDescriptions.length - 1; i >= 0; i--) {\n          let desc = this.outputDescriptions[i];\n          desc.generated = false; // 기본값으로 false 설정\n\n          for (let file of resultsList) {\n            // 이미 추가된 파일이 아니고, requestFile이 포함된 경우\n            if (!addedFiles.has(file) && file.includes(desc.requestFile)) {\n              desc.generated = true;\n              desc.downloadLinkList.push(file);\n              addedFiles.add(file); // 추가된 파일로 기록\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error in refreshGenerated: \", error);\n      }\n    },\n    async downloadOutput(downloadLinkList) {\n      if (downloadLinkList.length === 0) {\n        // 생성된 아웃풋이 없다고 영어로 경고\n        alert(\"There is no generated output.\");\n        return;\n      }\n\n      // 해당 아웃풋을 다운 받으시겠습니까? 영어로 confirm\n      if (\n        !confirm(\n          \"Are you sure you want to download the selected output? Please make sure you have selected the output.\"\n        )\n      ) {\n        return;\n      }\n\n      // 다운로드 링크를 모두 순회하며 다운로드\n      downloadLinkList.forEach(async (downloadLink) => {\n        try {\n          const result = await getDownloadResult(downloadLink);\n          console.log(result.data);\n          // 다운로드 링크를 생성\n          const url = window.URL.createObjectURL(new Blob([result.data]));\n          // 링크를 클릭하도록 설정\n          const linkElement = document.createElement(\"a\");\n          linkElement.href = url;\n          linkElement.setAttribute(\"download\", downloadLink);\n          // 클릭 이벤트를 발생시킴\n          linkElement.click();\n        } catch (error) {\n          console.error(error);\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n#layout {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n}\n.setup-layout {\n  width: 25%;\n  height: 95%;\n  margin-left: 1rem;\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  flex-direction: column;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  border-radius: 1rem;\n  box-sizing: border-box;\n  background-color: rgb(255, 255, 255);\n}\n.output-layout {\n  width: 25%;\n  height: 95%;\n  margin-left: 1rem;\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  flex-direction: column;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  border-radius: 1rem;\n  box-sizing: border-box;\n  background-color: rgb(255, 255, 255);\n}\n.setup-title,\n.output-title {\n  text-transform: capitalize;\n  font-weight: bold;\n  font-size: larger;\n  color: #494949;\n  margin: 50px 0px 20px 0px;\n}\n.input-description,\n.output-description {\n  width: 100%;\n  height: 5rem;\n  text-align: center;\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n  color: #a1a1a1;\n  background-color: rgb(224, 224, 224);\n  border-radius: 1rem;\n  margin: 0.5rem 0rem;\n  border: 2px solid #e7e7e7;\n  opacity: 0.9;\n}\n.output-description {\n  cursor: not-allowed;\n}\n.input-description.linked,\n.output-description.generated {\n  opacity: 1;\n  color: #fff;\n  background-color: rgb(22, 152, 51);\n  border: 2px solid #ecebff;\n}\n.output-description.generated {\n  cursor: pointer;\n}\n.description-id {\n  position: relative;\n  display: inline-block;\n  margin: 10px;\n}\n\n.description-id .description-tooltip {\n  visibility: hidden;\n  width: 200px;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 15px 10px;\n  border-radius: 10px;\n\n  position: absolute;\n  z-index: 1;\n  bottom: 125%;\n  left: 50%;\n  margin-left: -60px;\n\n  opacity: 0;\n  transition: opacity 0.3s;\n}\n\n.description-id .description-tooltip::after {\n  content: \"\";\n  position: absolute;\n  top: 100%;\n  left: 30%;\n  margin-left: -5px;\n  border-width: 5px;\n  border-style: solid;\n  border-color: #555 transparent transparent transparent;\n}\n\n/* Show the tooltip text when you mouse over the tooltip container */\n.description-id:hover .description-tooltip {\n  visibility: visible;\n  opacity: 1;\n}\n.setup-list {\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  scrollbar-width: thin;\n  scrollbar-color: #888 #f5f5f5;\n}\n.setup-item {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  margin-bottom: 0.5rem;\n}\n.setup-item:first-child {\n  pointer-events: none;\n}\n.setup-item:hover {\n  background-color: rgb(202, 214, 255);\n}\n.setup-date,\n.setup-filename {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  font-size: 0.9rem;\n  color: #353535;\n  padding: 0.5rem;\n}\n.setup-item:first-child > .setup-date,\n.setup-item:first-child > .setup-filename {\n  font-weight: bold;\n  font-size: 1rem;\n  opacity: 1;\n  background-color: rgb(224, 224, 224);\n  border-radius: 1rem;\n}\n.center-layout {\n  /* margin-top: 1rem;\n  margin-bottom: 1rem; */\n  width: 41%;\n  height: 100%;\n  margin-right: 1rem;\n  /* background-color: blue; */\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  flex-direction: column;\n  box-sizing: border-box;\n  overflow-y: scroll;\n  scrollbar-width: thin;\n  scrollbar-color: #888 #f5f5f5;\n}\n\n/* 웹킷 브라우저(크롬, 사파리 등)에 대한 스크롤바 스타일 */\n.center-layout::-webkit-scrollbar {\n  width: 5px; /* 스크롤바 너비 */\n}\n\n.center-layout::-webkit-scrollbar-thumb {\n  background-color: #cbcbcb; /* 스크롤바 색상 */\n  border-radius: 1rem; /* 스크롤바 border-radius */\n}\n\n.center-layout::-webkit-scrollbar-thumb:hover {\n  background-color: #8d8b8b; /* 스크롤바 호버 시 색상 */\n}\n.algorithm-layout {\n  background-color: rgb(255, 255, 255);\n  /* margin: 1rem; */\n  padding: 1rem;\n}\n\n.algorithm-select {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.algorithm-logo {\n  /* width: 50%; */\n  height: 5rem;\n  /* background-color: blue; */\n  top: 1rem;\n  object-fit: contain;\n}\n\n.arrow__left::after {\n  content: \"◀\";\n  font-size: 2rem;\n  color: rgb(48, 48, 48);\n  cursor: pointer;\n  margin-right: 1rem;\n}\n\n.arrow__right::after {\n  content: \"▶\";\n  font-size: 2rem;\n  color: rgb(48, 48, 48);\n  cursor: pointer;\n  margin-left: 1rem;\n}\n\n.algorithm-parts {\n  align-content: start;\n  width: 100%;\n  margin-bottom: 2rem;\n}\n.algorithm-select__tenet {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  box-sizing: border-box;\n}\n.option {\n  background: #fff;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  margin: 0 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  padding: 0 10px;\n  border: 2px solid lightgrey;\n  transition: all 0.3s ease;\n}\n.dot {\n  height: 20px;\n  width: 20px;\n  background: #d9d9d9;\n  border-radius: 50%;\n  position: relative;\n}\n.dot::before {\n  position: absolute;\n  content: \"\";\n  top: 4px;\n  left: 4px;\n  width: 12px;\n  height: 12px;\n  background: #0069d9;\n  border-radius: 50%;\n  opacity: 0;\n  transform: scale(1.5);\n  transition: all 0.3s ease;\n}\n#option-1:checked:checked ~ .option-1,\n#option-2:checked:checked ~ .option-2 {\n  border-color: #0069d9;\n  background: #0069d9;\n}\n#option-1:checked:checked ~ .option-1 .dot,\n#option-2:checked:checked ~ .option-2 .dot {\n  background: #fff;\n}\n#option-1:checked:checked ~ .option-1 .dot::before,\n#option-2:checked:checked ~ .option-2 .dot::before {\n  opacity: 1;\n  transform: scale(1);\n}\n.wrapper .option span {\n  font-size: 20px;\n  color: #808080;\n}\n#option-1:checked:checked ~ .option-1 span,\n#option-2:checked:checked ~ .option-2 span {\n  color: #fff;\n}\n.part-title {\n  text-transform: capitalize;\n  font-weight: bold;\n  font-size: large;\n  color: #353535;\n\n  margin: 20px 0px 10px 0px;\n}\n.parameters {\n  display: flex;\n  direction: row;\n  justify-content: space-between;\n  width: 100%;\n  height: 2rem;\n  color: #353535;\n  position: relative;\n  margin: 2px;\n  margin-bottom: 0.5rem;\n  text-transform: capitalize;\n}\n\n.parameter-id {\n  position: relative;\n  display: inline-block;\n}\n\n.parameter-id .parameter-tooltip {\n  visibility: hidden;\n  width: 200px;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 15px 10px;\n  border-radius: 10px;\n\n  position: absolute;\n  z-index: 1;\n  bottom: 125%;\n  left: 50%;\n  margin-left: -60px;\n\n  opacity: 0;\n  transition: opacity 0.3s;\n\n  text-transform: capitalize;\n}\n\n.parameter-id .parameter-tooltip::after {\n  content: \"\";\n  position: absolute;\n  top: 100%;\n  left: 30%;\n  margin-left: -5px;\n  border-width: 5px;\n  border-style: solid;\n  border-color: #555 transparent transparent transparent;\n}\n\n/* Show the tooltip text when you mouse over the tooltip container */\n.parameter-id:hover .parameter-tooltip {\n  visibility: visible;\n  opacity: 1;\n}\n\n.parameter__dropdown {\n  width: 9.3rem;\n  color: black;\n  border: 0.5px solid black;\n  border-radius: 3px;\n  border-color: black;\n  font-size: small;\n  text-align: left;\n  margin-bottom: 0px;\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  position: relative;\n}\n\n.parameter__dropdown:focus {\n  outline: none;\n  border-color: #aaa;\n}\n\n.parameter__dropdown span {\n  color: black;\n  font-size: 13px;\n  font-weight: 400;\n  cursor: pointer;\n  display: block;\n  font-family: Arial, Helvetica, sans-serif;\n  margin-left: 0.8rem;\n}\n\n/* .parameter__dropdown span::after {\n  position: absolute;\n  right: 0.1rem;\n  top: calc(50% - 0.8rem);\n  content: \"☑\";\n  font-size: 1.5rem;\n} */\n\n.parameter__drop {\n  position: absolute;\n  opacity: 0;\n  height: 0px;\n}\n\n.parameter__menu:checked::before {\n  content: \"✔\";\n}\n.parameter__radioBox {\n  width: 9.3rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.parameter__radio {\n  width: 50%;\n  border: 1px solid #8b8887;\n  padding: 0.5rem 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 0.9rem;\n}\n.parameter__checkbox {\n  display: none;\n  position: absolute;\n  clear: both;\n  width: 9.3rem;\n  max-height: 300px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  text-align: center;\n  background: #6c6867;\n  transition: height 0.4s ease;\n  border-radius: 0.5rem;\n}\n/* 웹킷 브라우저(크롬, 사파리 등)에 대한 스크롤바 스타일 */\n.parameter__checkbox::-webkit-scrollbar {\n  width: 5px; /* 스크롤바 너비 */\n}\n\n.parameter__checkbox::-webkit-scrollbar-thumb {\n  background-color: #cbcbcb; /* 스크롤바 색상 */\n  border-radius: 1rem; /* 스크롤바 border-radius */\n}\n\n.parameter__checkbox::-webkit-scrollbar-thumb:hover {\n  background-color: #8d8b8b; /* 스크롤바 호버 시 색상 */\n}\n.parameter__checkbox div {\n  height: 26px;\n  line-height: 1.2rem;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n#touch:checked + .parameter__checkbox {\n  border: 1px solid #8b8887;\n  display: block;\n  top: calc(100%);\n  right: 0;\n  z-index: 9999;\n}\n.parameter__check {\n  transform: scale(1.5);\n  margin-bottom: 1rem;\n  margin-right: 0.5rem;\n}\n.parameter__check:nth-child(2) {\n  margin-left: 0rem;\n}\n.parameter__icon {\n  position: absolute;\n  right: 0.6rem;\n  width: 1rem;\n  height: 1rem;\n  object-fit: contain;\n  padding-left: 2rem;\n}\n\n.parameter__button {\n  width: 9.3rem;\n  height: 2rem;\n  color: black;\n  border: 0.5px solid black;\n  border-radius: 3px;\n  border-color: black;\n  margin-bottom: 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  cursor: pointer;\n}\n.parameter__button--icon {\n  width: 1.75rem;\n  height: 1.75rem;\n  object-fit: contain;\n  opacity: 0.8;\n  margin-right: 0.5rem;\n}\n.parameter__menu {\n  width: 85%;\n  height: 100%;\n  color: black;\n  padding: 3px 7.5%;\n  /* right: 10px; */\n  border-radius: 3px;\n  border-color: #e7eaff;\n  font-size: small;\n  text-align: center;\n  margin-bottom: 0px;\n  cursor: pointer;\n  position: relative;\n  word-wrap: break-word; /* 긴 단어가 div의 너비를 넘어갈 때 줄바꿈 */\n  overflow-wrap: break-word; /* CSS3에서 word-wrap 대신 사용 */\n}\n.parameter__textInput {\n  width: 8.5rem;\n  color: black;\n  padding: 5px;\n  /* right: 10px; */\n  border-radius: 3px;\n  border-color: #f1f2fc;\n  font-size: small;\n  text-align: center;\n  margin-bottom: 0px;\n}\n.parameter__textInput:disabled {\n  background-color: lightgray;\n}\n.parameter__textInput:disabled::placeholder {\n  color: black;\n}\n.left-layout {\n  width: 23%;\n  height: 100%;\n  margin-left: -1rem;\n  margin-right: 1rem;\n  /* background-color: green; */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n.right-layout {\n  width: 27%;\n  height: 95%;\n  /* margin-right: 1rem; */\n  /* background-color: green; */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n.setup-layout,\n.output-layout {\n  width: 100%;\n  margin-left: 1rem;\n  margin-right: 0rem;\n}\n.options-layout {\n  width: 25%;\n  height: 95%;\n  /* background-color: red; */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n.options__item {\n  /* margin: auto; */\n  color: black;\n  /* padding: 2% 0; */\n  margin: 2%;\n}\n.form__input {\n  position: absolute;\n  width: 0;\n  height: 0;\n  padding: 0;\n  overflow: hidden;\n  border: 0;\n  display: none;\n}\n\n.form__button--setup {\n  cursor: pointer;\n  width: 8rem;\n  height: 3rem;\n  margin-left: 12.5rem;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.5);\n  border-radius: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /* background: rgb(163, 163, 163); */\n  background: rgb(59, 108, 221);\n  font-family: \"Montserrat\", sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.2rem;\n  line-height: 1rem;\n  color: rgb(240, 240, 240);\n}\n.form__button--result {\n  cursor: pointer;\n  width: 12rem;\n  height: 3rem;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.5);\n  border-radius: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /* background: rgb(163, 163, 163); */\n  background: rgb(59, 108, 221);\n  font-family: \"Montserrat\", sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.2rem;\n  line-height: 1rem;\n  color: rgb(249, 249, 249);\n  margin-bottom: 1rem;\n}\n.form__button--result:hover {\n  background: rgb(40, 84, 197);\n}\n\n.apply {\n  cursor: pointer;\n  background: rgb(40, 84, 197);\n  color: white;\n}\n.wiggle {\n  animation: wiggle 2s linear infinite;\n}\n.selected {\n  /* 선택된 요소의 배경색 변경 */\n  background-color: #0069d9;\n  color: white;\n}\n\ninput[type=\"radio\"] {\n  display: none;\n}\n\n.reset-button {\n  position: absolute;\n  margin-top: -5px;\n  width: 1.5rem;\n  height: 1.5rem;\n  opacity: 0.7;\n}\n.reset-button:hover {\n  opacity: 0.5;\n  cursor: pointer;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./algorithm.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./algorithm.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./algorithm.vue?vue&type=template&id=964960a8&scoped=true\"\nimport script from \"./algorithm.vue?vue&type=script&lang=js\"\nexport * from \"./algorithm.vue?vue&type=script&lang=js\"\nimport style0 from \"./algorithm.vue?vue&type=style&index=0&id=964960a8&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"964960a8\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","on","uncheckCheckbox","staticClass","_v","_m","_l","sortedSetupList","file","idx","key","$event","getOption","_s","_f","current_algorithm","fasttenetLog","tenetLogo","_e","directives","name","rawName","value","selectedTenetOption","expression","domProps","_q","option_name","target","composing","checkSelectedIndices","isSelectedIndices","class","wiggle","isFileSelected","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","val","_value","multiple","$store","getters","getCurrentFile","current_file","checkFileSelected","commonOptions","annotationColumn","$set","selectColumns","annotations","column","index","getCurrentLinkedNodes","group","clusterColumn","length","require","ref","clusters","clusterToggle","includes","pseudotimeColumn","pseudotime","currentAlgorithmData","part","id","parameters","parameter","description","type","step","disabled","min","max","Object","keys","option","selectOption","style","buttonStyle","refInFor","preventDefault","uploadFile","apply","arguments","data","activate","setOption","refreshGenerated","outputDescriptions","outputDescription","generated","downloadOutput","downloadLinkList","staticRenderFns","fasttenetLogo","algorithms","isAnimated","inputDescriptions","linked","tenetAlgorithm","required","requestFile","current_option_file_name","optionData","setupList","uploadPercentage","uploadFailed","selectFile","mounted","nodeIndex","getCurrentNodeIndex","console","log","algorithmOptions","getNodesAlgorithmOptions","algorithm","undefined","optionName","optionFilePath","tenetOptions","result","getClusters","file_name","anno_column","error","filterAndAddSuffix","getColumns","anno_columns","pseudo_columns","checkOptions","option_files","item","computed","checkCurrentNode","getCurrentNode","fasttenetAlgorithm","slice","sort","a","b","localeCompare","backgroundColor","watch","handler","newVal","commit","deep","oldVal","filters","splitDateAndFileName","num","year","split","substring","month","day","hour","minute","methods","inputString","segments","fileName","join","algorithmSelect","direction","indexOf","$refs","files","File","form","FormData","append","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","response","uploadForm","filename","confirm","getOptions","anno_of_interest","pseudo_of_interest","clusters_of_interest","param","num_of_threads","history_length","species","gene_list_file","cutoff_for_fdr","num_of_links","trimming_indirect_edges","event","checkbox","contains","checkbox__area","checked","push","selectedKey","values","forEach","alert","gene_list","linkedNodes","selectedIndices","setupAlgorithm","option_result","desc","option_file_name","getResultFile","resultsList","result_files","addedFiles","Set","i","has","add","getDownloadResult","downloadLink","url","window","URL","createObjectURL","Blob","linkElement","document","createElement","href","setAttribute","click","component"],"sourceRoot":""}