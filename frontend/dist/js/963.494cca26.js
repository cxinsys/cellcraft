"use strict";(self["webpackChunkcellcraft_vue"]=self["webpackChunkcellcraft_vue"]||[]).push([[963],{5963:function(t,e,s){s.r(e),s.d(e,{default:function(){return h}});var a=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"layout"}},[e("div",{staticClass:"plotly-layout"},[e("div",{ref:"plotlyChart",attrs:{id:"plotlyChart"}})]),e("div",{staticClass:"options-layout"},[e("div",{staticClass:"options__item"},[e("p",{staticClass:"options__title"},[t._v("Method")]),e("select",{directives:[{name:"model",rawName:"v-model",value:t.selectedVisualizationTitle,expression:"selectedVisualizationTitle"}],staticClass:"options__item--select",on:{change:[function(e){var s=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){var e="_value"in t?t._value:t.value;return e}));t.selectedVisualizationTitle=e.target.multiple?s:s[0]},function(e){return t.setSelectVisualization(e)}]}},t._l(t.visualizationList,(function(s,a){return e("option",{key:a,domProps:{value:s.name}},[t._v(" "+t._s(s.name)+" ")])})),0)]),t._l(t.selectedVisualizationParams,(function(s,a){return e("div",{directives:[{name:"show",rawName:"v-show",value:"outputFile"!==s.type,expression:"parameter.type !== 'outputFile'"}],key:a,staticClass:"options__item"},["inputFile"===s.type&&s.name.includes("target")?e("p",{staticClass:"options__title"},[t._v(" Input File ")]):e("p",{staticClass:"options__title"},[t._v(" "+t._s(s.name)+" ")]),"inputFile"===s.type&&s.name.includes("target")?e("select",{directives:[{name:"model",rawName:"v-model",value:s.defaultValue,expression:"parameter.defaultValue"}],staticClass:"options__item--select",on:{change:function(e){var a=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){var e="_value"in t?t._value:t.value;return e}));t.$set(s,"defaultValue",e.target.multiple?a:a[0])}}},t._l(t.resultFileConnectionList,(function(s,a){return e("option",{key:a,domProps:{value:s.data.file.name}},[t._v(" "+t._s(s.data.file.name)+" ")])})),0):"inputFile"===s.type?e("div",{staticClass:"checkbox-wrapper-18 options__item--input"},[e("div",{staticClass:"round"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.checkStatuses[s.defaultValue],expression:"checkStatuses[parameter.defaultValue]"}],attrs:{type:"checkbox",id:"checkbox-18",disabled:""},domProps:{checked:Array.isArray(t.checkStatuses[s.defaultValue])?t._i(t.checkStatuses[s.defaultValue],null)>-1:t.checkStatuses[s.defaultValue]},on:{change:function(e){var a=t.checkStatuses[s.defaultValue],i=e.target,l=!!i.checked;if(Array.isArray(a)){var o=null,n=t._i(a,o);i.checked?n<0&&t.$set(t.checkStatuses,s.defaultValue,a.concat([o])):n>-1&&t.$set(t.checkStatuses,s.defaultValue,a.slice(0,n).concat(a.slice(n+1)))}else t.$set(t.checkStatuses,s.defaultValue,l)}}}),e("label",{attrs:{for:"checkbox-18"}})])]):t._e(),"int"===s.type||"float"===s.type?e("input",{directives:[{name:"model",rawName:"v-model",value:s.defaultValue,expression:"parameter.defaultValue"}],staticClass:"options__item--input",attrs:{type:"number",step:s.defaultValue,min:s.min,max:s.max},domProps:{value:s.defaultValue},on:{input:function(e){e.target.composing||t.$set(s,"defaultValue",e.target.value)}}}):"boolean"===s.type?e("input",{directives:[{name:"model",rawName:"v-model",value:s.defaultValue,expression:"parameter.defaultValue"}],staticClass:"options__item--input",attrs:{type:"checkbox"},domProps:{checked:Array.isArray(s.defaultValue)?t._i(s.defaultValue,null)>-1:s.defaultValue},on:{change:function(e){var a=s.defaultValue,i=e.target,l=!!i.checked;if(Array.isArray(a)){var o=null,n=t._i(a,o);i.checked?n<0&&t.$set(s,"defaultValue",a.concat([o])):n>-1&&t.$set(s,"defaultValue",a.slice(0,n).concat(a.slice(n+1)))}else t.$set(s,"defaultValue",l)}}}):"string"===s.type?e("input",{directives:[{name:"model",rawName:"v-model",value:s.defaultValue,expression:"parameter.defaultValue"}],staticClass:"options__item--input",attrs:{type:"text"},domProps:{value:s.defaultValue},on:{input:function(e){e.target.composing||t.$set(s,"defaultValue",e.target.value)}}}):t._e()])})),e("div",{staticClass:"options__item"},[e("button",{attrs:{id:"reset-button"},on:{click:t.resetSelect}},[t._v("Reset")]),e("button",{class:{failure:t.showFailure,success:t.showSuccess},attrs:{id:"apply-button",disabled:t.disableApplyButton||t.on_progress},on:{click:t.runVisualization}},[t.on_progress?e("p",[e("span",{staticClass:"button-loader"}),t._v(" Processing... ")]):t.showFailure?e("p",[t._v(" Failure... ")]):t.showSuccess?e("p",[t._v(" Visualization ")]):e("p",[t._v(" "+t._s(t.disableApplyButton?"Select Applied":"Select Apply ")+" ")])])])],2)])},i=[],l=s(6098),o=s(8933),n=s.n(o),r={data(){return{workflowId:this.$route.query.workflow_id,nodeId:this.$route.query.node,algorithmId:null,plotlyData:null,layout:{},selectedPlugin:"",selectedVisualizationParams:[],selectedVisualizationTitle:"",visualizationList:[],resultFileConnectionList:[],resultFileList:[],checkStatuses:{},eventSources:{},disableApplyButton:!1,on_progress:!1,taskStatus:"",showFailure:!1,showSuccess:!1}},async mounted(){try{const t=this.$store.getters.getWorkflowNodeInfo(this.nodeId),e=t.inputs.input_1.connections,s=this.$store.getters.getAlgorithmNodeConnectedToInput(this.nodeId);console.log(s),this.algorithmId=s.id,this.resultFileList=await this.checkResultFiles(),this.selectedPlugin=s.data.selectedPlugin.name;const a=await(0,l.Yv)(this.selectedPlugin),i=Object.values(a.data.plugin.rules),o=i.filter((t=>t.isVisualization));this.visualizationList=o,console.log(this.visualizationList),this.resultFileConnectionList=e.map((t=>this.$store.getters.getWorkflowNodeInfo(t.node)));const n=t.data.title,r=o.find((t=>t.output[0]===n));if(t.data["selectedVisualizationParams"]&&t.data["selectedVisualizationTitle"]?(this.selectedVisualizationParams=t.data["selectedVisualizationParams"],this.selectedVisualizationTitle=t.data["selectedVisualizationTitle"]):r?(this.selectedVisualizationParams=r.parameters,this.selectedVisualizationTitle=r.name):(this.selectedVisualizationParams=this.visualizationList[0].parameters,this.selectedVisualizationTitle=this.visualizationList[0].name),this.initializeCheckStatuses(),this.selectedVisualizationParams.length>0){const t={selectedVisualizationParams:this.selectedVisualizationParams},e=this.nodeId;this.$store.commit("setWorkflowNodeDataObject",{nodeId:e,dataObject:t})}if(this.selectedVisualizationTitle){const t={selectedVisualizationTitle:this.selectedVisualizationTitle},e=this.nodeId;this.$store.commit("setWorkflowNodeDataObject",{nodeId:e,dataObject:t})}this.renderPlot()}catch(t){console.error(t)}},watch:{selectedVisualizationParams:{handler(t){if(t){const e={selectedVisualizationParams:t},s=this.nodeId;this.$store.commit("setWorkflowNodeDataObject",{nodeId:s,dataObject:e})}},deep:!0},selectedVisualizationTitle:{handler(t){if(t){const e={selectedVisualizationTitle:t},s=this.nodeId;this.$store.commit("setWorkflowNodeDataObject",{nodeId:s,dataObject:e})}}}},beforeDestroy(){for(let t in this.eventSources)this.closeEventSource(t)},methods:{async runVisualization(){try{const t=this.$store.getters.getTitle,e=this.$store.getters.getThumbnail,s=this.$store.getters.getWorkflowInfo,a={id:this.workflowId,algorithm_id:this.algorithmId,current_node_id:this.nodeId,title:t,thumbnail:e,workflow_info:s},i=await(0,l.kq)(a);if(console.log(i),"Visualization result already exists"===i.data.message){const t={id:this.workflowId,algorithm_id:this.algorithmId,filename:i.data.result_path},e=await(0,l.uQ)(t);this.plotlyData=e.data,this.renderPlot(),this.taskStatus="SUCCESS"}else this.createEventSource(i.data.task_id)}catch(t){console.error(t)}},renderPlot(){this.plotlyData&&n().newPlot(this.$refs.plotlyChart,this.plotlyData.data,this.plotlyData.layout)},async resetSelect(){try{const t=await(0,l.Yv)(this.selectedPlugin),e=Object.values(t.data.plugin.rules),s=e.filter((t=>t.isVisualization));this.visualizationList=s;const a=s.find((t=>t.name===this.selectedVisualizationTitle));this.selectedVisualizationParams=a.parameters,this.plotlyData=null,this.renderPlot()}catch(t){console.error(t)}},createEventSource(t){this.on_progress=!0,this.taskStatus="",this.showFailure=!1,this.eventSources[t]=(0,l.Ng)(t,{onMessage:t=>{console.log("Received update: ",t.data)},onComplete:e=>{console.log("close",e),"FAILURE"===e?(this.taskStatus="FAILURE",this.showFailure=!0,setTimeout((()=>{this.showFailure=!1}),3e3)):"SUCCESS"===e&&(this.taskStatus="SUCCESS",this.showSuccess=!0),this.on_progress=!1,this.closeEventSource(t),clearInterval(this.timeInterval)},onError:e=>{console.error("SSE Error:",e),this.taskStatus="FAILURE",this.showFailure=!0,setTimeout((()=>{this.showFailure=!1}),3e3),this.on_progress=!1,this.closeEventSource(t),clearInterval(this.timeInterval)}})},closeEventSource(t){this.eventSources[t]&&(this.eventSources[t].close(),delete this.eventSources[t])},setSelectVisualization(t){const e=this.visualizationList.find((e=>e.name===t.target.value));this.selectedVisualizationParams=e.parameters,this.initializeCheckStatuses(),this.renderPlot()},setSelectInputFile(t){this.selectedInputFile=t.target.value,this.renderPlot()},initializeCheckStatuses(){Array.isArray(this.selectedVisualizationParams)&&this.selectedVisualizationParams.forEach((t=>{"inputFile"!==t.type||t.name.includes("target")||(console.log(t.defaultValue),this.checkStatuses[t.defaultValue]=this.resultFileList.some((e=>e.name===t.defaultValue)),console.log(this.resultFileList),this.disableApplyButton=!Object.values(this.checkStatuses).every((t=>t)))}))},async checkResultFiles(){const t={id:this.workflowId,algorithm_id:this.algorithmId},e=await(0,l.h1)(t),s=e.data;return console.log(s),s}}},u=r,c=s(1656),d=(0,c.A)(u,a,i,!1,null,"5542a862",null),h=d.exports}}]);
//# sourceMappingURL=963.494cca26.js.map