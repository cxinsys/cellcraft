rule TenetInput:
    input:
        h5ad="user/{userName}/data/{fileName}",
        option="user/{userName}/data/{optionFileName}"
    output:
        target="workflow/data/TenetInput_{userName}_{fileName}.txt",
        expMatrix="user/{userName}/result/{optionFileName}_TenetInput_{fileName}_expMatrix.csv",
        pseudotime="user/{userName}/result/{optionFileName}_TenetInput_{fileName}_pseudotime.csv",
        cellSelect="user/{userName}/result/{optionFileName}_TenetInput_{fileName}_cellSelect.csv"
    script:
        "/app/workflow/script/TenetInput.py"

rule Tenet:
    input:
        expMatrix="user/{userName}/result/{optionFileName}_TenetInput_{fileName}_expMatrix.csv",
        pseudotime="user/{userName}/result/{optionFileName}_TenetInput_{fileName}_pseudotime.csv",
        cellSelect="user/{userName}/result/{optionFileName}_TenetInput_{fileName}_cellSelect.csv"
    output:
        target="workflow/data/Tenet_{userName}_{fileName}.txt",
        result="user/{userName}/result/{optionFileName}_Tenet_{fileName}_resultMatrix.txt"
    shell:
        """
        echo "try success" > "/app/{output.target}"
        /app/workflow/script/TENET/TENET "{input.expMatrix}" {numOfThreads} "{input.pseudotime}" "{input.cellSelect}" {historyLength} "{output.result}" {userName}
        """

rule TenetTF:
    input:
        expMatrix="user/{userName}/result/{optionFileName}_TenetInput_{fileName}_expMatrix.csv",
        pseudotime="user/{userName}/result/{optionFileName}_TenetInput_{fileName}_pseudotime.csv",
        cellSelect="user/{userName}/result/{optionFileName}_TenetInput_{fileName}_cellSelect.csv"
    output:
        target="workflow/data/TenetTF_{userName}_{fileName}.txt",
        result="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_resultMatrix.txt"
    shell:
        """
        echo "try success" > "/app/{output.target}"
        /app/workflow/script/TENET/TENET_TF "{input.expMatrix}" {numOfThreads} "{input.pseudotime}" "{input.cellSelect}" {historyLength} {species} "{output.result}" {userName}
        """

rule ReconstructionGRN_Fdr:
    input:
        resultMatrix="user/{userName}/result/{optionFileName}_Tenet_{fileName}_resultMatrix.txt"
    output:
        result="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.fdr{cutoffForFdr}.sif"
    shell:
        "/opt/conda/envs/snakemake/bin/python /app/workflow/script/TENET/makeGRN.py {cutoffForFdr} {input.resultMatrix} {output.result}"

rule ReconstructionGRN_Fdr_TF:
    input:
        resultMatrix="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_resultMatrix.txt"
    output:
        result="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.fdr{cutoffForFdr}.sif"
    shell:
        "/opt/conda/envs/snakemake/bin/python /app/workflow/script/TENET/makeGRNbyTF.py {species} {cutoffForFdr} {input.resultMatrix} {output.result}"

rule ReconstructionGRN_NumLinks:
    input:
        resultMatrix="user/{userName}/result/{optionFileName}_Tenet_{fileName}_resultMatrix.txt"
    output:
        result="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.sif"
    shell:
        "/opt/conda/envs/snakemake/bin/python /app/workflow/script/TENET/makeGRNsameNumberOfLinks.py {numOfLinks} {input.resultMatrix} {output.result}"

rule ReconstructionGRN_NumLinks_TF:
    input:
        resultMatrix="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_resultMatrix.txt"
    output:
        result="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.sif"
    shell:
        "/opt/conda/envs/snakemake/bin/python /app/workflow/script/TENET/makeGRNbyTFsameNumberOfLinks.py {species} {numOfLinks} {input.resultMatrix} {output.result}"

rule TrimmingIndirectEdges:
    input:
        fdr="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.fdr{cutoffForFdr}.sif",
        numLinks="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.sif"
    output:
        fdr_trim="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.fdr{cutoffForFdr}.trimIndirect{trimmingIndirectEdges}.sif",
        numLinks_trim="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.trimIndirect{trimmingIndirectEdges}.sif"
    shell:
        """
        /opt/conda/envs/snakemake/bin/python /app/workflow/script/TENET/trim_indirect.py "{input.fdr}" {trimmingIndirectEdges} "{output.fdr_trim}"
        /opt/conda/envs/snakemake/bin/python /app/workflow/script/TENET/trim_indirect.py "{input.numLinks}" {trimmingIndirectEdges} "{output.numLinks_trim}"
        """

rule TrimmingIndirectEdges_TF:
    input:
        fdr="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.fdr{cutoffForFdr}.sif",
        numLinks="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.sif"
    output:
        fdr_trim="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.fdr{cutoffForFdr}.trimIndirect{trimmingIndirectEdges}.sif",
        numLinks_trim="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.trimIndirect{trimmingIndirectEdges}.sif"
    shell:
        """
        /opt/conda/envs/snakemake/bin/python /app/workflow/script/TENET/trim_indirect.py "{input.fdr}" {trimmingIndirectEdges} "{output.fdr_trim}"
        /opt/conda/envs/snakemake/bin/python /app/workflow/script/TENET/trim_indirect.py "{input.numLinks}" {trimmingIndirectEdges} "{output.numLinks_trim}"
        """

rule CountOutdegree:
    input:
        fdr="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.fdr{cutoffForFdr}.sif",
        numLinks="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.sif"
    output:
        fdr_out="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.fdr{cutoffForFdr}.outdegree.txt",
        numLinks_out="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.outdegree.txt"
    shell:
        """
        /opt/conda/envs/snakemake/bin/python /app/workflow/script/TENET/countOutdegree.py "{input.fdr}" "{output.fdr_out}"
        /opt/conda/envs/snakemake/bin/python /app/workflow/script/TENET/countOutdegree.py "{input.numLinks}" "{output.numLinks_out}"
        """

rule CountOutdegree_TF:
    input:
        fdr="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.fdr{cutoffForFdr}.sif",
        numLinks="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.sif"
    output:
        fdr_out="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.fdr{cutoffForFdr}.outdegree.txt",
        numLinks_out="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.outdegree.txt"
    shell:
        """
        /opt/conda/envs/snakemake/bin/python /app/workflow/script/TENET/countOutdegree.py "{input.fdr}" "{output.fdr_out}"
        /opt/conda/envs/snakemake/bin/python /app/workflow/script/TENET/countOutdegree.py "{input.numLinks}" "{output.numLinks_out}"
        """

rule DownstreamAnalysis:
    input:
        fdr_trim="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.fdr{cutoffForFdr}.trimIndirect{trimmingIndirectEdges}.sif",
        numLinks_trim="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.trimIndirect{trimmingIndirectEdges}.sif",
        fdr_out="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.fdr{cutoffForFdr}.outdegree.txt",
        numLinks_out="user/{userName}/result/{optionFileName}_Tenet_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.outdegree.txt"
    output:
        target="workflow/data/DownstreamAnalysis_{userName}_{fileName}.txt",
    shell:
        "echo {input[0]} > /app/{output.target}"

rule DownstreamAnalysis_TF:
    input:
        fdr_trim="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.fdr{cutoffForFdr}.trimIndirect{trimmingIndirectEdges}.sif",
        numLinks_trim="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.trimIndirect{trimmingIndirectEdges}.sif",
        fdr_out="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.fdr{cutoffForFdr}.outdegree.txt",
        numLinks_out="user/{userName}/result/{optionFileName}_TenetTF_{fileName}_result_matrix.NumberOfLinks{numOfLinks}.outdegree.txt"
    output:
        target="workflow/data/DownstreamAnalysisTF_{userName}_{fileName}.txt",
    shell:
        "echo {input[0]} > /app/{output.target}"