version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - TZ=Asia/Seoul
      - VUE_APP_BASE_URL=http://0.0.0.0:8000
    restart: always

  backend:
    environment:
      - CONDA_DEFAULT_ENV=snakemake
      - TZ=Asia/Seoul
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
    restart: always

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=Asia/Seoul
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    restart: always

  celery:
      environment:
        - CONDA_DEFAULT_ENV=snakemake
        - C_FORCE_ROOT=true
        - TZ=Asia/Seoul
      ipc: host
      build:
        context: ./backend
        dockerfile: Dockerfile.dev.celery
      volumes:
        - ./backend:/app
      depends_on:
        - rabbitmq
        - db
      deploy:
        resources:
          limits:
            cpus: '44'
      restart: always
volumes:
  postgres_data:
